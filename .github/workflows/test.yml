# .github/workflows/test.yml
name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      sql:
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: YourStrong!Passw0rd
          MSSQL_PID: Developer
        ports:
          - 1433
        options: >-
          --health-cmd "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P YourStrong!Passw0rd -Q 'SELECT 1' || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install ODBC Driver
      run: |
        curl https://packages.microsoft.com/keys/microsoft.asc | sudo tee /etc/apt/trusted.gpg.d/microsoft.asc
        curl https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list
        sudo apt-get update
        sudo ACCEPT_EULA=Y apt-get install -y msodbcsql17

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        pip install -e .

    - name: Run tests
      env:
        MSSQL_DRIVER: "ODBC Driver 17 for SQL Server"
        MSSQL_HOST: localhost
        MSSQL_USER: sa
        MSSQL_PASSWORD: YourStrong!Passw0rd
        MSSQL_DATABASE: master
        PORT: ${{ job.services.sql.ports[1433] }}
      run: |
        # Register pytest integration mark
        echo "[pytest]" > pytest.ini
        echo "markers =" >> pytest.ini
        echo "    integration: marks tests as integration tests" >> pytest.ini
        
        # Run tests with verbose output
        pytest tests/ -v

  test-mssql:
    name: Test with MSSQL
    runs-on: ubuntu-latest
    
    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:2019-latest 
        env:
          ACCEPT_EULA: Y
          MSSQL_PID: Express
          MSSQL_SA_PASSWORD: testpassword
        ports:
          - 1433:1433

    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install ODBC Driver
      run: |
        curl https://packages.microsoft.com/keys/microsoft.asc | sudo tee /etc/apt/trusted.gpg.d/microsoft.asc
        curl https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list
        sudo apt-get update
        sudo ACCEPT_EULA=Y apt-get install -y msodbcsql17
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        pip install -e .

    - name: Run tests
      env:
        MSSQL_DRIVER: "ODBC Driver 17 for SQL Server"
        MSSQL_HOST: localhost
        MSSQL_USER: sa
        MSSQL_PASSWORD: testpassword
        MSSQL_DATABASE: master
        PORT: ${{ job.services.mssql.ports[1433] }}
      run: |
        pytest tests/ -v

  test-azure-sql:
    name: Test with Azure SQL
    runs-on: ubuntu-latest
    
    services:
      azuresql:
        image: mcr.microsoft.com/azure-sql-edge:latest
        env:
          ACCEPT_EULA: Y
          MSSQL_SA_PASSWORD: testpassword
        ports:
          - 1433:1433

    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install ODBC Driver
      run: |
        curl https://packages.microsoft.com/keys/microsoft.asc | sudo tee /etc/apt/trusted.gpg.d/microsoft.asc
        curl https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list
        sudo apt-get update
        sudo ACCEPT_EULA=Y apt-get install -y msodbcsql17

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        pip install -e .

    - name: Run tests
      env:
        MSSQL_DRIVER: "ODBC Driver 17 for SQL Server"
        MSSQL_HOST: localhost
        MSSQL_USER: sa
        MSSQL_PASSWORD: testpassword
        MSSQL_DATABASE: master
        PORT: ${{ job.services.azuresql.ports[1433] }}
        AZURE_SQL_ENCRYPT: yes
        AZURE_SQL_TRUST_SERVER_CERTIFICATE: yes
        AZURE_SQL_CONNECTION_TIMEOUT: 30
      run: |
        pytest tests/ -v --ignore=tests/test_azure_sql_security.py
        pytest tests/test_azure_sql_security.py -v