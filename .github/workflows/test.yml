# .github/workflows/test.yml
name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test-sql-variants:
    name: Test SQL Server Variants
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        include:
          - variant: mssql-2019
            image: mcr.microsoft.com/mssql/server:2019-latest
            python: "3.11"
          - variant: mssql-2019
            image: mcr.microsoft.com/mssql/server:2019-latest
            python: "3.12"
          - variant: azure-sql-edge
            image: mcr.microsoft.com/azure-sql-edge:latest
            python: "3.11"
          - variant: azure-sql-edge
            image: mcr.microsoft.com/azure-sql-edge:latest
            python: "3.12"

    services:
      sql:
        image: ${{ matrix.image }}
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: testpassword
          MSSQL_PID: Developer
        ports:
          - 1433
        options: >-
          --health-cmd "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P testpassword -Q 'SELECT 1' || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python }}

    - name: Install ODBC Driver
      run: |
        curl https://packages.microsoft.com/keys/microsoft.asc | sudo tee /etc/apt/trusted.gpg.d/microsoft.asc
        curl https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list
        sudo apt-get update
        sudo ACCEPT_EULA=Y apt-get install -y msodbcsql17 unixodbc-dev

    - name: Verify ODBC Installation
      run: |
        echo "Available ODBC Drivers:"
        python3 -c "import pyodbc; print('\n'.join(pyodbc.drivers()))"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        pip install -e .

    - name: Run tests
      env:
        MSSQL_DRIVER: "ODBC Driver 17 for SQL Server"
        MSSQL_HOST: localhost
        MSSQL_USER: sa
        MSSQL_PASSWORD: testpassword
        MSSQL_DATABASE: master
        MSSQL_PORT: ${{ job.services.sql.ports[1433] }}
        AZURE_SQL_ENCRYPT: ${{ matrix.variant == 'azure-sql-edge' && 'yes' || 'no' }}
        AZURE_SQL_TRUST_SERVER_CERTIFICATE: ${{ matrix.variant == 'azure-sql-edge' && 'yes' || 'no' }}
        AZURE_SQL_CONNECTION_TIMEOUT: 30
        PYTEST_ADDOPTS: "-v"
      run: |
        # Print connection details for debugging
        echo "Testing ${{ matrix.variant }} with Python ${{ matrix.python }}"
        echo "Host: $MSSQL_HOST"
        echo "Port: $MSSQL_PORT"
        echo "Driver: $MSSQL_DRIVER"
        
        if [ "${{ matrix.variant }}" = "azure-sql-edge" ]; then
          # Run tests excluding Azure SQL security tests first
          pytest tests/ --ignore=tests/test_azure_sql_security.py
          # Then run Azure SQL specific security tests
          pytest tests/test_azure_sql_security.py -v
        else
          # Run all tests for regular SQL Server
          pytest tests/
        fi